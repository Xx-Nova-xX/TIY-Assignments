



/*
it('', fucntion() {
});
*/









/*var sumEvens;
var arrEvens = [];
var fibonacci = [ 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];

    function filterEvens(arrElement){
        if(arrElement % 2 === 0) return arrElement;
    }
    
    arrEvens = fibonacci.filter(filterEvens);
    console.log(arrEvens);

    sumEvens = arrEvens.reduce(function(previousValue, currentValue, index, array){
        return previousValue + currentValue;
    });
    
    console.log(sumEvens);

    assert = require('chai').assert;
    describe('filterEvens()', function(){
        it('should return an function', function() {
        assert.typeOf(filterEvens, 'function');   
        });
        it( 'should return even numbers', function() {
        assert.equal(filterEvens(2), 2);
        });
        it('should return an array of evens', function() {
        assert.deepEqual(fibonacci.filter(filterEvens), [ 2, 8, 34 ]);
        });
    });



*/
// You should probably write some...



var sum = 0; //variable for the sum of all the numbers 

    for (var multipleMaybe = 0; multipleMaybe < 1000; multipleMaybe++) { //multipleMaybe is numbers 1-999 to be passed through 
                                                                        //it starts at 0, checks to see if it is 0-999 and then adds one 
        if(multipleMaybe % 3 === 0 || multipleMaybe %  5 === 0) { //if multipleMaybe is divided by 3 or 5 with a remainder of 0 send to 
        sum += multipleMaybe;            //this is like saying sum = multipleMaybe + multipleMaybe each pass
        }
    }
        //console.log(sum); //logs the final total of the multiples